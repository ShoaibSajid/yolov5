# YOLOv5 üöÄ by Ultralytics, GPL-3.0 license
# COCO 2017 dataset http://cocodataset.org by Microsoft
# Example usage: python train.py --data coco.yaml
# parent
# ‚îú‚îÄ‚îÄ yolov5
# ‚îî‚îÄ‚îÄ datasets
#     ‚îî‚îÄ‚îÄ coco  ‚Üê downloads here


# Train/val/test sets as 1) dir: path/to/imgs, 2) file: path/to/imgs.txt, or 3) list: [path/to/imgs1, path/to/imgs2, ..]
path:   /home/shoaib/datasets/HCK/ # dataset root dir
train:  /home/shoaib/datasets/HCK/train_with_all_colors.txt
val:    /home/shoaib/datasets/HCK/val_with_all_colors.txt 
test:   /home/shoaib/datasets/HCK/val_with_all_colors.txt

# Classes
nc: 13  # number of classes
names: ["car","bus","truck","motorcycle","bicycle","trailer","train","rider","pedestrian","traffic light","traffic sign","other vehicle","other person"]  # class names  


# for val_data in 1color_with_aug_val 
# do                
#         for clr in org black blue green red silver white yellow 
#         do
#                 python val.py \
#                 --weights "runs/train/Aroona/HCK/Yolov5m/Yolov5m_Retrain_using_HCK_segmented_augmented_starGANv2_10pIOU_"$clr"/weights/best.pt" \
#                 --device 6 \
#                 --name "Yolov5m_Retrain_using_HCK_segmented_augmented_starGANv2_10pIOU_"$clr \
#                 --data "data_aroona/"$val_data"/HACKTHON_"$clr".yaml" \
#                 --exist-ok
#         done
# done

# for val_data in 1color_with_aug_val 
# do                
#         for clr in org black blue green red silver white yellow 
#         do
#                 python val.py \
#                 --weights "runs/train/Aroona/HCK/Yolov5s/Yolov5s_Retrain_using_HCK_segmented_augmented_starGANv2_10pIOU_"$clr"/weights/best.pt" \
#                 --device 6 \
#                 --name "Yolov5s_Retrain_using_HCK_segmented_augmented_starGANv2_10pIOU_"$clr \
#                 --data "data_aroona/"$val_data"/HACKTHON_"$clr".yaml" \
#                 --exist-ok
#         done
# done